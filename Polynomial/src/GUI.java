/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;


/**
 *
 * @author Taylor
 */
public class GUI extends javax.swing.JFrame {
    int highestPower;
    /**
     * Creates new form NewJFrame
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        solveButton = new javax.swing.JButton();
        highestPowerField = new javax.swing.JTextField();
        highestPowerLabel = new javax.swing.JLabel();
        coefficientPrompt = new javax.swing.JLabel();
        highestPowerErrorLabel = new javax.swing.JLabel();
        coefficientScrollPanel = new javax.swing.JScrollPane();
        coefficientPanel = new javax.swing.JPanel();
        coefficientErrorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        solveButton.setVisible(false);
        solveButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        solveButton.setText("Solve");
        solveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                solveButtonMouseClicked(evt);
            }
        });
        getContentPane().add(solveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 205, -1, -1));

        highestPowerField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        highestPowerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highestPowerActionPerformed(evt);
            }
        });
        highestPowerField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                highestPowerKeyTyped(evt);
            }
        });
        getContentPane().add(highestPowerField, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 0, 100, 40));

        highestPowerLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        highestPowerLabel.setText("Please enter the highest power of the polynomial:");
        getContentPane().add(highestPowerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 35));

        coefficientPrompt.setVisible(false);
        coefficientPrompt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        coefficientPrompt.setText("Please enter the coefficients for each partner of x in the polynomial:");
        getContentPane().add(coefficientPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 53, 803, 40));

        highestPowerErrorLabel.setVisible(false);
        highestPowerErrorLabel.setForeground(new java.awt.Color(204, 0, 0));
        highestPowerErrorLabel.setText("Invalid input. Please try again.");
        getContentPane().add(highestPowerErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 14, -1, -1));

        coefficientScrollPanel.setVisible(false);
        coefficientScrollPanel.setRequestFocusEnabled(false);

        coefficientPanel.setVisible(false);
        coefficientPanel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        coefficientPanel.setMaximumSize(new java.awt.Dimension(730, 100));
        coefficientPanel.setMinimumSize(new java.awt.Dimension(730, 100));
        coefficientPanel.setName(""); // NOI18N

        javax.swing.GroupLayout coefficientPanelLayout = new javax.swing.GroupLayout(coefficientPanel);
        coefficientPanel.setLayout(coefficientPanelLayout);
        coefficientPanelLayout.setHorizontalGroup(
            coefficientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        coefficientPanelLayout.setVerticalGroup(
            coefficientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        coefficientScrollPanel.setViewportView(coefficientPanel);

        getContentPane().add(coefficientScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 98, 730, 100));

        coefficientErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        coefficientErrorLabel.setText("Invalid input. Please try again.");
        getContentPane().add(coefficientErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 180, -1));
        coefficientErrorLabel.setVisible(false);

        pack();
    }// </editor-fold>                        

    private void highestPowerActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            
    
    private void createCoefficientScrollPanel(){
        coefficientPanel.revalidate();
        coefficientPanel.removeAll();
        highestPowerErrorLabel.setVisible(false);
        coefficientPrompt.setVisible(true);
        coefficientPanel.setVisible(true);
        coefficientScrollPanel.setVisible(true);
        solveButton.setVisible(true);
    }
    
    private JTextField createCoefficientField(){
        JTextField field = new JTextField();
        field.setFont(new Font("Tahoma", Font.PLAIN, 20));
        field.setPreferredSize(new Dimension(60, 40));
        field.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    coefficientKeyTyped(evt);
                }});
        return field;
    }
    
    private void coefficientKeyTyped(java.awt.event.KeyEvent evt){
        char c = evt.getKeyChar();
        try{
            if(!(Character.isDigit(c) || (c==KeyEvent.VK_ENTER) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
                coefficientErrorLabel.setVisible(false);
                evt.consume();
            }
        }
        catch(NumberFormatException e){
                coefficientErrorLabel.setVisible(true);
        }
    }
    private JLabel createCoefficientJLabel(String text){
        JLabel label = new JLabel(text);
        label.setFont(new Font("Tahoma", Font.PLAIN, 20));
        return label;
    }
    
    private JButton createSignButton(){
        String plus = "+";
        String minus = "-";
        final JButton button = new JButton(plus);
        button.addActionListener((ActionEvent e) -> {
            if(button.getText() == null || button.getText().equals(plus)){
                button.setText(minus);
            }
            else{
                button.setText(plus);
            }
        });
        button.setPreferredSize(new Dimension(60, 40));
        button.setFont(new Font("Tahoma", Font.PLAIN, 20));
        return button;
    }
    
    private void addComponents(JLabel label, JTextField field, JButton button){
        coefficientPanel.add(button);
        coefficientPanel.add(field);
        coefficientPanel.add(label);
        allFields.add(field);
        allSigns.add(button);
    }
    private void addComponents(JTextField field, JButton button){
        coefficientPanel.add(button);
        coefficientPanel.add(field);
        allFields.add(field);
        allSigns.add(button);
    }
    private void highestPowerKeyTyped(java.awt.event.KeyEvent evt) {                                      
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        try{
            if(c==KeyEvent.VK_ENTER && (Integer.valueOf(highestPowerField.getText()) > 0)){
                createCoefficientScrollPanel();
                highestPower = Integer.valueOf(highestPowerField.getText());
                coefficientPanel.setLayout(new FlowLayout());
                while(highestPower != 0){
                    String text = "x^"+highestPower;
                    JLabel label = createCoefficientJLabel(text);
                    JTextField field = createCoefficientField();      
                    JButton button = createSignButton();
                    addComponents(label, field, button);
                    highestPower -= 1;
                    if(highestPower == 0){
                        JButton lastButton = createSignButton();
                        JTextField lastField = createCoefficientField();
                        addComponents(lastField, lastButton);
                    }
                }
                
            }
            if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
                highestPowerErrorLabel.setVisible(false);
                evt.consume();
            }
        }
        catch(NumberFormatException e){
                highestPowerErrorLabel.setVisible(true);
        }
    }                                     

    private void solveButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        revalidate();
        try{
            for(int i=0; i < allFields.size(); i++){
                if(!allFields.get(i).getText().isEmpty()){
                    coefficient.add(Integer.valueOf(allFields.get(i).getText()));
                    System.out.println(coefficient.get(i));
                }
                else{
                    coefficient.add(0);
                    System.out.println(0);
                }
            }
            for(int i=0; i < allSigns.size(); i++){
                sign.add(allSigns.get(i).getText());
                System.out.println(sign.get(i));
            }
            for(int i = 0; i < allFields.size(); i++){
                if(coefficient.get(0) == 0){
                    coefficient.remove(0);
                    allFields.remove(0);
                    allSigns.remove(0);
                    sign.remove(0);
                }        
            }
            IntegerPolynomial solve = new IntegerPolynomial(coefficient, sign);
            textDatabase.add(coefficient);
            buttonDatabase.add(sign);
            for(int i=0; i < allFields.size(); i++){
                allFields.remove(i);
                coefficient.remove(i);
            }
            for(int i=0; i < allSigns.size(); i++){
                allSigns.remove(i);
                sign.remove(i);
            }
            //ResultGUI solved = new ResultGUI();
            //solved.setVisible(true);
        }
        catch(NumberFormatException e){
            coefficientErrorLabel.setVisible(true);
        }
                
                
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }
    private final List<List<Integer>> textDatabase = new ArrayList<List<Integer>>();
    private final List<List<String>> buttonDatabase = new ArrayList<List<String>>();
    private final List<JTextField> allFields = new ArrayList<JTextField>();
    private final List<JButton> allSigns = new ArrayList<JButton>();
    private List<Integer> coefficient = new ArrayList<Integer>();
    private List<String> sign = new ArrayList<String>();
    // Variables declaration - do not modify                     
    private javax.swing.JLabel coefficientErrorLabel;
    private javax.swing.JPanel coefficientPanel;
    private javax.swing.JLabel coefficientPrompt;
    private javax.swing.JScrollPane coefficientScrollPanel;
    private javax.swing.JLabel highestPowerErrorLabel;
    private javax.swing.JTextField highestPowerField;
    private javax.swing.JLabel highestPowerLabel;
    private javax.swing.JButton solveButton;
    // End of variables declaration                   
}